#!/bin/sh

PmLogCtl def chrome.runscript warning
PmLogCtl logkv chrome.runscript info launchTime place=start_chrome
######################################################################
                 #      Environment Variables       #
######################################################################

export CHROMIUM_BROWSER="yes"
export BROWSER_NAME="AppShell_Chromium53"
export TMPDIR="/tmp"
export ENABLE_INSPECTOR=1
export BROWSER_APP_ID=""
export APP_FOLDER_PATH=""
export EXTRA_PARAMS_JSON=""

while [[ "$1" != ""  &&  "$2" != "" ]]; do
    PARAM=$1
    VALUE=$2
    case $PARAM in
        --appid)
            BROWSER_APP_ID=$VALUE
            ;;
        --folder)
            APP_FOLDER_PATH=$VALUE
            ;;
        --params)
            EXTRA_PARAMS_JSON=$VALUE
            ;;
        *)
            echo "ERROR: unknown parameter \"$PARAM\""
            exit 1
            ;;
    esac
    shift
    shift
done

if [ -z ${APP_FOLDER_PATH} ]; then
    echo "ERROR: --folder info not provided \"$@\""
    exit 1
fi

if [ -z ${BROWSER_APP_ID} ]; then
    echo "ERROR: --appid info not provided \"$@\""
    exit 1
fi

if test -d ${XDG_RUNTIME_DIR}; then
  export XDG_RUNTIME_DIR="${TMPDIR}/xdg"
fi

DEPLOY_DIR=$(dirname $(readlink -f $0))

USER_CACHE_CONF=${DEPLOY_DIR}/user_cachedir_conf
if [ -f ${USER_CACHE_CONF} ]; then
    CACHE_DIR=`cat ${USER_CACHE_CONF}`
else
    CACHE_DIR="${XDG_CACHE_HOME:-$HOME/.cache}"
fi

FONT_CONFIG_CONF=${DEPLOY_DIR}/font_config_conf.sh
if [ -x ${FONT_CONFIG_CONF} ]; then
    . ${FONT_CONFIG_CONF}
fi

CHROME_CACHE="${CACHE_DIR}/chrome"
WRITABLE_PATH="${CHROME_CACHE}/Default"

WINDOW_SIZE_CONF=${DEPLOY_DIR}/window_size_conf
if [ -f ${WINDOW_SIZE_CONF} ]; then
    WINDOW_SIZE=`cat ${WINDOW_SIZE_CONF}`
fi

USER_AGENT_CONF=${DEPLOY_DIR}/user_agent_conf
if [ -f ${USER_AGENT_CONF} ]; then
    USER_AGENT=`cat ${USER_AGENT_CONF}`
fi

######################################################################
                #      Target Environment          #
######################################################################
PmLogCtl logkv chrome.runscript info launchTime place=start_env

# temp code for security issue
chmod -R 777 ${CHROME_CACHE}
rm -f ${CHROME_CACHE}/Singleton*
rm -rf ${TMPDIR}/.org.chromium.*

######################################################################
               #      WebBrowser Settings         #
######################################################################
export PANGO_RC_FILE=${DEPLOY_DIR}/etc/pango/pangorc

######################################################################
                 #      Runtime Configuration       #
######################################################################
CHROME_COMPOSITING_FLAGS=" \
  --enable-accelerated-compositing\
  --enable-smooth-scrolling\
"
CHROME_FLAGS=" \
  --always-authorize-plugins\
  --disable-component-update\
  --disable-gpu-watchdog\
  --disable-gpu-rasterization\
  --disable-infobars\
  --disable-new-video-renderer\
  --disable-translate\
  --disable-web-security\
  --enable-file-cookies\
  --gpu-no-context-lost\
  --ignore-gpu-blacklist\
  --in-process-gpu\
  --noerrdialogs\
  --no-sandbox\
  --ozone-platform=wayland\
  --start-maximized\
  --webos-appid=${BROWSER_APP_ID}\
  --user-data-dir=${CHROME_CACHE}\
  --no-zygote\
  --load-apps=${APP_FOLDER_PATH}\
  --v8-snapshot-blob-path=${APP_FOLDER_PATH}/snapshot_blob.bin\
  --webos-appshell\
"

# setup 10 Mb maximum for ApplicationCache per domain
export APPSHELL_APPCACHE_DOMAINLIMIT=10485760
# setup 50 Mb maximum for ApplicationCache
export APPSHELL_APPCACHE_MAXSIZE=52428800
# setup 50 Mb maximum for DiskCache
export APPSHELL_DISKCACHE_MAXSIZE=52428800
# setup 256 Kb maximum for resource buffer allocation
export APPSHELL_RESOURCE_BUFFER_MAX_ALLOC_SIZE=262144
# setup 1 Mb for resource buffer
export APPSHELL_RESOURCE_BUFFER_SIZE=1048576
# setup 2 Mb maximum for the program GPU cache
export GPU_PROGRAM_CACHE_SIZE=2048
# setup SKIA caches maximum size
export SKIA_FONT_CACHE_SIZE=1
export SKIA_IMAGE_CACHE_SIZE=40
export SKIA_BACKGROUND_FONT_CACHE_SIZE=0

JS_FLAGS=" \
--heap_growing_percent=1\
 --configure_heap_details\
 --minimum_allocation_limit_growing_step_size=2\
 --high_fragmentation_slack=0\
 --external_allocation_hard_limit=64\
 --external_allocation_soft_limit=16\
"

TUNING_FLAGS=" \
    --enable-aggressive-foreground-gc \
    --enable-aggressive-release-policy \
    --application-cache-domain-limit=${APPSHELL_APPCACHE_DOMAINLIMIT} \
    --application-cache-size=${APPSHELL_APPCACHE_MAXSIZE} \
    --disable-low-res-tiling \
    --disk-cache-size=${APPSHELL_DISKCACHE_MAXSIZE} \
    --max-unused-resource-memory-usage-percentage=0 \
    --resource-buffer-max-allocation-size=${APPSHELL_RESOURCE_BUFFER_MAX_ALLOC_SIZE} \
    --resource-buffer-size=${APPSHELL_RESOURCE_BUFFER_SIZE} \
    --ui-disable-opaque-shader-program \
    --gpu-program-cache-size-kb=${GPU_PROGRAM_CACHE_SIZE} \
    --skia-font-cache-size-mb=${SKIA_FONT_CACHE_SIZE} \
    --skia-image-cache-size-mb=${SKIA_IMAGE_CACHE_SIZE} \
    --skia-background-font-cache-size-kb=${SKIA_BACKGROUND_FONT_CACHE_SIZE} \
    --enable-low-end-device-mode \
"

CHROME_FLAGS="${CHROME_COMPOSITING_FLAGS} ${CHROME_FLAGS} ${TUNING_FLAGS}"

if [ "${ENABLE_INSPECTOR}" = "1" ] ; then
  CHROME_FLAGS="${CHROME_FLAGS} --remote-debugging-port=9999"
fi

if [ -n "${WINDOW_SIZE}" ]; then
    CHROME_FLAGS="${CHROME_FLAGS} --window-size=${WINDOW_SIZE}"
fi

EXTRA_CONF=${CACHE_DIR}/extra_conf
if [ -f ${EXTRA_CONF} ]; then
    source ${EXTRA_CONF}
    echo "CHROME_FLAGS=${CHROME_FLAGS}"
fi

PmLogCtl logkv chrome.runscript info launchTime place=call_chrome

######################################################################
                #      Launch WebBrowser           #
# REPLACE * is used to fill the compiled source version automatically #
# So, should not be removed.
######################################################################

echo ""
echo "----------------------------------------------------------------------"
echo "                       Launching Web Browser                          "
### REPLACE URL ###
### REPLACE REVISION ###
### REPLACE BUILD TIME ###
echo "----------------------------------------------------------------------"
echo ""

exec ${DEPLOY_DIR}/app_shell ${CHROME_FLAGS} --js-flags="${JS_FLAGS}"
